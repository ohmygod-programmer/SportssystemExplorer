package forms;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class DataForm extends JFrame {
    private JPanel rootPanel;
    private JLabel titleLabel;
    private JPanel infoPanel;
    private JTable dataTable;

    public DataForm() {
        setContentPane(rootPanel);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        pack();
        setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        revalidate();
        setVisible(true);
    }

    public void setTitleText(String text) {
        titleLabel.setText(text);
    }

    public JTable getDataTable() {
        return dataTable;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new FormLayout("fill:200dlu:grow", "center:32dlu:noGrow,top:4dlu:noGrow,center:100dlu:grow"));
        rootPanel.setBackground(new Color(-1));
        infoPanel = new JPanel();
        infoPanel.setLayout(new BorderLayout(0, 0));
        CellConstraints cc = new CellConstraints();
        rootPanel.add(infoPanel, cc.xy(1, 3, CellConstraints.FILL, CellConstraints.FILL));
        dataTable = new JTable();
        dataTable.setBackground(new Color(-1));
        dataTable.setForeground(new Color(-16777216));
        dataTable.setGridColor(new Color(-986896));
        dataTable.setShowVerticalLines(false);
        infoPanel.add(dataTable, BorderLayout.CENTER);
        titleLabel = new JLabel();
        Font titleLabelFont = this.$$$getFont$$$("Segoe UI Black", -1, 16, titleLabel.getFont());
        if (titleLabelFont != null) titleLabel.setFont(titleLabelFont);
        titleLabel.setForeground(new Color(-16777216));
        titleLabel.setHorizontalAlignment(0);
        titleLabel.setText("Entity");
        rootPanel.add(titleLabel, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

}
